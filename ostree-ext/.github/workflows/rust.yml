# Inspired by https://github.com/rust-analyzer/rust-analyzer/blob/master/.github/workflows/ci.yaml
# but tweaked in several ways.  If you make changes here, consider doing so across other
# repositories in e.g. ostreedev etc.
name: Rust

permissions:
  actions: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  # Minimum supported Rust version (MSRV)
  ACTION_MSRV_TOOLCHAIN: 1.58.1
  # Pinned toolchain for linting
  ACTION_LINTS_TOOLCHAIN: 1.58.1

jobs:
  build:
    runs-on: ubuntu-latest
    container: quay.io/coreos-assembler/fcos-buildroot:testing-devel
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: ./ci/installdeps.sh
      # xref containers/containers-image-proxy-rs
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72
      - name: Build
        run: cargo test --no-run && cargo build
      - name: Run tests
        run: cargo test -- --nocapture --quiet
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: ostree-ext-cli
          path: target/debug/ostree-ext-cli
  build-minimum-toolchain:
    name: "Build, minimum supported toolchain (MSRV)"
    runs-on: ubuntu-latest
    container: quay.io/coreos-assembler/fcos-buildroot:testing-devel
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install deps
        run: ./ci/installdeps.sh
      - name: Remove system Rust toolchain
        run: dnf remove -y rust cargo
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env['ACTION_MSRV_TOOLCHAIN']  }}
          default: true
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72
      - name: cargo build (release)
        run: cargo build --release
  linting:
    name: "Lints, pinned toolchain"
    runs-on: ubuntu-latest
    container: quay.io/coreos-assembler/fcos-buildroot:testing-devel
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install deps
        run: ./ci/installdeps.sh
      - name: Remove system Rust toolchain
        run: dnf remove -y rust cargo
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env['ACTION_LINTS_TOOLCHAIN']  }}
          default: true
          components: rustfmt, clippy
      - name: cargo fmt (check)
        run: cargo fmt -- --check -l
      - name: cargo clippy (warnings)
        run: cargo clippy -- -D warnings
  integration:
    name: "Integration"
    needs: build
    runs-on: ubuntu-latest
    container: quay.io/coreos-assembler/fcos:testing-devel
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download ostree-ext-cli
        uses: actions/download-artifact@v2
        with:
          name: ostree-ext-cli
      - name: Install
        run: install ostree-ext-cli /usr/bin && rm -v ostree-ext-cli
      - name: Integration tests
        run: ./ci/integration.sh
  privtest:
    name: "Privileged testing"
    needs: build
    runs-on: ubuntu-latest
    container:
      image: quay.io/coreos-assembler/fcos:testing-devel
      options: "--privileged -v /:/run/host"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: ostree-ext-cli
      - name: Install
        run: install ostree-ext-cli /usr/bin && rm -v ostree-ext-cli
      - name: Integration tests
        run: ./ci/priv-integration.sh
