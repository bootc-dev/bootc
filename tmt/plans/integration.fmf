# Note that this provisioning defaults to using a locally built bootc
# disk image. The default runs in Github Actions use nested KVM
# to run most of these tests.
#
# However, Packit+Testing Farm provisions a stock package-based
# cloud VM. When it does that, it ignores the `provision:` tag
# here, sets running_env=packit, and installs the build artifacts to
# /var/share/test-artifacts/. The prepare phase then builds a bootc
# image and reinstalls the system.
#
# The idea here is all of our tests should work when started from
# a package-based host *or* an image-based one.
#
# For local testing:
# - Standard workflow: Use tests/run-tmt.sh (builds bootc image first, sets running_env=image_mode)
#
# To reproduce Testing Farm workflow locally with testcloud:
# Testing Farm provisions a stock cloud VM, creates a yum repo for the copr build artifacts,
# installs binary RPMs (bootc, system-reinstall-bootc), and places the SRPM in
# /var/share/test-artifacts/. The prepare phase then builds a bootc container image and
# reinstalls the system. To reproduce locally:
#
# 1. Build packages in current directory:
#      fedpkg --release f42 srpm
#      mock -r fedora-42-x86_64 --resultdir=. bootc-*.src.rpm
# 2. Run with inserted prepare steps to set up artifacts on the VM:
#    tmt --context running_env=packit run -a \
#      provision -h virtual --image fedora \
#      prepare --insert --order 96 -h install -p createrepo_c \
#      prepare --insert --order 96 -h shell \
#        -s 'mkdir -p /var/share/test-artifacts /var/tmp/bootc-repo' \
#        -s 'cp bootc-*.src.rpm /var/share/test-artifacts/' \
#        -s 'cp bootc-*.rpm system-reinstall-bootc-*.rpm /var/tmp/bootc-repo/' \
#        -s 'createrepo_c /var/tmp/bootc-repo' \
#        -s 'printf "[test-artifacts]\nname=test-artifacts\nbaseurl=file:///var/tmp/bootc-repo\nenabled=1\ngpgcheck=0\n" > /etc/yum.repos.d/test-artifacts.repo'
#
# Note: tmt syncs the test tree (including files in current directory) to the guest.
provision:
  how: virtual
  image: $@{test_disk_image}
prepare:
  # Install image mode system on package mode system
  # Do not run on image mode VM running on Github CI and Locally
  # Run on package mode VM running on Packit and Gating
  # order 9x means run it at the last job of prepare
  - how: install
    order: 97
    package:
      - podman
      - skopeo
      - jq
      - bootc
      - system-reinstall-bootc
      - expect
      - ansible-core
      - zstd
    when: running_env != image_mode
  - how: shell
    order: 98
    script:
      - mkdir -p bootc && cp /var/share/test-artifacts/*.src.rpm bootc
      - cd bootc && rpm2cpio *.src.rpm | cpio -idmv && rm -f *-vendor.tar.zstd && zstd -d *.tar.zstd && tar -xvf *.tar -C . --strip-components=1 && ls -al
      - pwd && ls -al && cd bootc/hack && ./provision-packit.sh
    when: running_env != image_mode
  # tmt-reboot and reboot do not work in this case
  # reboot in ansible is the only way to reboot in tmt prepare
  - how: ansible
    order: 99
    playbook:
      - https://github.com/bootc-dev/bootc/raw/refs/heads/main/hack/packit-reboot.yml
    when: running_env != image_mode
execute:
  how: tmt

/readonly-tests:
  summary: Execute booted readonly/nondestructive tests
  discover:
    how: fmf
    test:
        - /tmt/tests/test-01-readonly

/test-20-local-upgrade:
  summary: Execute local upgrade tests
  discover:
    how: fmf
    test:
        - /tmt/tests/test-20-local-upgrade

/test-21-logically-bound-switch:
  summary: Execute logically bound images tests for switching images
  discover:
    how: fmf
    test:
        - /tmt/tests/test-21-logically-bound-switch

/test-22-logically-bound-install:
  summary: Execute logically bound images tests for switching images
  discover:
    how: fmf
    test:
        - /tmt/tests/test-22-logically-bound-install

/test-23-install-outside-container:
  summary: Execute tests for installing outside of a container
  discover:
    how: fmf
    test:
        - /tmt/tests/test-23-install-outside-container

/test-24-local-upgrade-reboot:
  summary: Execute local upgrade tests with automated reboot
  discover:
    how: fmf
    test:
        - /tmt/tests/test-24-local-upgrade-reboot

/test-25-soft-reboot:
  summary: Soft reboot support
  discover:
    how: fmf
    test:
        - /tmt/tests/test-25-soft-reboot

/test-26-examples-build:
  summary: Test bootc examples build scripts
  discover:
    how: fmf
    test:
        - /tmt/tests/test-26-examples-build
  adjust:
    - when: running_env != image_mode
      enabled: false
      because: packit tests use RPM bootc and does not install /usr/lib/bootc/initramfs-setup

/test-27-custom-selinux-policy:
  summary: Execute restorecon test on system with custom selinux policy
  discover:
    how: fmf
    test:
        - /tmt/tests/test-27-custom-selinux-policy
  adjust:
    - when: running_env != image_mode
      enabled: false
      because: tmt-reboot does not work with systemd reboot in testing farm environment

/test-28-factory-reset:
  summary: Factory reset
  discover:
    how: fmf
    test:
        - /tmt/tests/test-28-factory-reset
